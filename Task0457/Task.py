# Возьмем четырехзначное число, в котором не все цифры одинаковы, например 6264.
# Расположим цифры сначала в порядке убывания - 6642; затем, переставив их в обратном порядке,
# получим 2466. Вычтем последнее число из 6642. На следующем шаге с полученной разностью
# проделаем проделаем то же самое. Если в результате промежуточных вычислений получилось
# число из менее чем четырёх цифр - дополним его лидирующими нулями до четырёхзначного и используем
# в вычислениях как четырёхзначное. Через несколько таких действий получится число, переходящее само
# в себя и называемое постоянной Капрекара.
#
# Требуется написать программу, которая находит эту постоянную и количество шагов для ее получения
# из заданного четырехзначного числа.

count = 0
n = int(input())

while True:
    my_list = [n // 1000, n // 100 % 10, n // 10 % 10, n % 10]
    my_list = sorted(my_list)
    min_num = my_list[0] * 1000 + my_list[1] * 100 + my_list[2] * 10 + my_list[3]
    max_num = my_list[0] + my_list[1] * 10 + my_list[2] * 100 + my_list[3] * 1000
    new_n = max_num - min_num
    if new_n == n:
        break
    else:
        count += 1
        n = new_n
        while n < 1000:
            n *= 10

print(n)
print(count)
